{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-page/admin-page.component.css","webpack:///./src/app/admin-page/admin-page.component.html","webpack:///./src/app/admin-page/admin-page.component.ts","webpack:///./src/app/admin-section-list/admin-section-list.component.css","webpack:///./src/app/admin-section-list/admin-section-list.component.html","webpack:///./src/app/admin-section-list/admin-section-list.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/hello-world-two/hello-world-two.component.css","webpack:///./src/app/hello-world-two/hello-world-two.component.html","webpack:///./src/app/hello-world-two/hello-world-two.component.ts","webpack:///./src/app/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".list-group-item.active.webdev {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: #8cbaff;\\r\\n  border-color: #3b1dff;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <a routerLink=\\\"/home\\\">Home</a> &nbsp;&nbsp; <a routerLink=\\\"/profile\\\">Profile</a>\\n  <br>\\n  <br>\\n  <h1>Admin Page</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Course</li>\\n      <li [ngClass]=\\\"{'active webdev': course.id == courseId}\\\"\\n          (click)=\\\"loadSections(course.id)\\\"\\n          *ngFor=\\\"let course of courses\\\"\\n          class=\\\"list-group-item\\\">\\n        <a routerLink=\\\"/course/{{course.id}}/sections\\\">\\n          {{course.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-admin-section-list></app-admin-section-list>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  courses: Course[] = [];\n  courseId = '';\n  sections = [];\n  constructor(private courseService: CourseServiceClient,\n              private sectionService: SectionServiceClient) { }\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .sectionService\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Sections for course: {{courseId}}</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n  <br>\\n  <input [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <br>\\n  <input [(ngModel)]=\\\"maxSeats\\\"\\n         placeholder=\\\"Max Seats\\\"\\n         class=\\\"form-control\\\">\\n  <br>\\n  <button (click)=\\\"createSection(sectionName, seats, maxSeats)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Add Section\\n  </button>\\n  <br>\\n  <button (click)=\\\"saveSection()\\\" class=\\\"btn btn-success btn-block\\\">\\n    Save Section\\n  </button>\\n  <br>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} {{section.seats}} {{section.maxSeats}}\\n      <button (click)=\\\"setSection(section.name, section.seats, section.maxSeats, section._id)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Edit</button>&nbsp; &nbsp;\\n      <button (click)= \\\"deleteSection(section._id)\\\" class=\\\"float-right btn btn-danger\\\">Delete</button>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-admin-section-list',\n  templateUrl: './admin-section-list.component.html',\n  styleUrls: ['./admin-section-list.component.css']\n})\nexport class AdminSectionListComponent implements OnInit {\n  constructor(private service: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  sectionId = '';\n  courseId = '';\n  // courseName = '';\n  sections = [];\n  maxSeats = '';\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this.courseService.findCourseById(courseId)\n      .then(course => {\n        if (course.status !== 400) {\n          this.sectionName = course.title + ' Section 1';\n        }});\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  createSection(sectionName, seats, maxSeats) {\n    this\n      .service\n      .createSection(this.courseId, sectionName, seats, maxSeats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  deleteSection(sectionId) {\n   this.service.deleteSection(sectionId)\n     .then(() => {\n       this.loadSections(this.courseId);\n     });\n  }\n  saveSection() {\n    this.service.saveSection(this.sectionId, this.sectionName, this.seats, this.maxSeats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  setSection(sectionName, seats, maxSeats, sectionId) {\n    this.sectionName = sectionName;\n    this.seats = seats;\n    this.sectionId = sectionId;\n    this.maxSeats = maxSeats;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HelloWorldComponent } from './hello-world.component';\n\nimport { AppComponent } from './app.component';\nimport { HelloWorldTwoComponent } from './hello-world-two/hello-world-two.component';\nimport {FormsModule} from '@angular/forms';\nimport {CourseNavigatorServiceClient} from './services/course-navigator.service.client';\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {routing} from './app.routing';\nimport {CourseServiceClient} from './services/course.service.client';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\nimport { AdminSectionListComponent } from './admin-section-list/admin-section-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    HelloWorldTwoComponent,\n    CourseNavigatorComponent,\n    CourseGridComponent,\n    WhiteBoardComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent,\n    AdminPageComponent,\n    AdminSectionListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {CourseGridComponent} from './course-grid/course-grid.component';\r\nimport {WhiteBoardComponent} from './white-board/white-board.component';\r\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {SectionListComponent} from './section-list/section-list.component';\r\nimport {AdminPageComponent} from './admin-page/admin-page.component';\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: WhiteBoardComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'admin', component: AdminPageComponent},\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/section', component: SectionListComponent },\r\n  { path: 'course/:courseId/sections', component: AdminPageComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: '**', component: WhiteBoardComponent} // last\r\n  ];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".card {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\"","module.exports = \"<h2>Course Grid ({{courses.length}})</h2>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p class=\\\"card-text\\\">Course Details</p>\\n        <a routerLink=\\\"/course/{{course.id}}\\\" class=\\\"btn btn-primary\\\">Go to Course</a>\\n        &nbsp; &nbsp;\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\" class=\\\"btn btn-primary\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \".list-group-item.active.webdev {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: #00a8ff;\\r\\n  border-color: #00a8ff;\\r\\n}\\r\\n\"","module.exports = \"<h1>Navigator</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">\\n        Courses</li>\\n      <li (click)=\\\"selectCourse(course.id)\\\"\\n          class=\\\"list-group-item webdev\\\"\\n          [ngClass]=\\\"{'active': course.id=== selectedCourseId}\\\"\\n          *ngFor=\\\"let course of courses\\\">\\n        {{course.title}}</li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-3\\\"><ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item active\\\">\\n      Modules </li>\\n    <li (click)=\\\"selectModule(module.id)\\\"\\n      class=\\\"list-group-item webdev\\\"\\n        [ngClass]=\\\"{'active': module.id=== selectedModuleId}\\\"\\n        *ngFor=\\\"let module of modules\\\">\\n      {{module.title}} </li>\\n  </ul>\\n  </div>\\n  <div class=\\\"col-3\\\">Lessons</div>\\n  <div class=\\\"col-3\\\">Widgets</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from '../services/course-navigator.service.client';\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  courses = [];\n  modules = [];\n  selectedCourseId = 0;\n  selectedModuleId = 0;\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n      });\n  }\n  constructor(private service: CourseNavigatorServiceClient) { }\n  selectCourse(courseId) {\n    this.selectedCourseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules =>\n        this.modules = modules);\n  }\n  selectModule(moduleId) {\n    this.selectedModuleId = moduleId;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <br>\\n  <br>\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {ActivatedRoute} from '@angular/router';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{message}}</h1>\\n<ul>\\n  <li *ngFor=\\\"let course of courses\\\">\\n    {{course.title}}\\n    <button (click)=\\\"deleteCourse(course.id)\\\"\\n            class=\\\"btn btn-danger\\\">\\n      Delete\\n    </button>\\n  </li>\\n</ul>\\n<input [(ngModel)]=\\\"courseTitle\\\"\\n       class=\\\"form-control\\\"/>\\n<button\\n  class=\\\"btn btn-success\\\"\\n  (click)=\\\"addCourse(courseTitle)\\\">\\n  Add Course\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world-two',\n  templateUrl: './hello-world-two.component.html',\n  styleUrls: ['./hello-world-two.component.css']\n})\nexport class HelloWorldTwoComponent implements OnInit {\n  message = 'Hello World Component two speaking';\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n  courseTitle: string;\n\n  deleteCourse(courseId) {\n    this.courses =\n      this.courses\n        .filter(course =>\n          course.id !== courseId);\n  }\n  addCourse(courseTitle) {\n    const largestId = Math.max.apply(\n      Math, this.courses.map(\n        function(course) {\n          return course.id; }))\n    this.courses.push(\n      {title: courseTitle, id: largestId + 1}\n    );\n    this.courseTitle = '';\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component} from '@angular/core';\r\n@Component({\r\n    selector: 'app-hello-world',\r\n    template: '<h1>Hello World</h1>'\r\n\r\n  }\r\n)\r\nexport class HelloWorldComponent { }\r\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonServiceClient} from '../services/lesson.service.client';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.courseId, this.moduleId, this.lessonId);\n  }\n\n  loadLessons(courseId, moduleId, lessonId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    // console.log(moduleId);\n    this.service.findLessonsForModule(courseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n  <div class=\\\"float-left\\\">\\n  <a routerLink=\\\"/register\\\">Register</a>\\n  </div>\\n  <div class=\\\"float-right\\\">\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Route, Router} from '@angular/router';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username;\r\n  password;\r\n  login(username, password) {\r\n    console.log([username, password]);\r\n    this.service.login(username, password)\r\n      .then((user) => {\r\n        if (user._id === -1) {\r\n          alert('Invalid');\r\n        } else {\r\n          this.router.navigate(['profile']);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  constructor(private router: Router, private service: UserServiceClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class Course {\r\n  id: number;\r\n  title: string;\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: #63ceff;\\r\\n  border-color: #3b1dff;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: rgb(0, 0, 0);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n  <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <br>\\n  <h2>Sections ({{sections.length}})</h2>\\n  <br>\\n  <div *ngFor=\\\"let course of courses\\\">\\n    <ul class=\\\"list-group\\\">\\n      <div *ngFor=\\\"let enrollment of sections\\\">\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"course.id===enrollment.section.courseId\\\">\\n          <a routerLink='/course/{{course.id}}/section'> Course : {{course.title}} Section: {{enrollment.section.name}} </a>\\n          <button (click)=\\\"unenroll(enrollment.section._id)\\\" class=\\\"float-right btn btn-danger\\\">Un-Enroll</button>\\n        </li>\\n      </div>\\n    </ul>\\n  </div>\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/admin\\\" *ngIf=\\\"username==='admin'\\\">Admin Page</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {User} from '../models/user.model.client';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\nimport {Router} from '@angular/router';\r\nimport {SectionServiceClient} from '../services/section.service.client';\r\nimport {Course} from '../models/course.model.client';\r\nimport {CourseServiceClient} from '../services/course.service.client';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(private service: UserServiceClient,\r\n              private sectionService: SectionServiceClient,\r\n              private courseService: CourseServiceClient,\r\n              private router: Router) { }\r\n\r\n  user = {};\r\n  _id;\r\n  username;\r\n  password;\r\n  firstName;\r\n  lastName;\r\n  email;\r\n  sections = [];\r\n  courses: Course[] = [];\r\n\r\n\r\n  logout() {\r\n    this.service\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n\r\n\r\n  update() {\r\n    // console.log(user);\r\n    this.service\r\n      .update(this._id, this.username, this.firstName, this.lastName, this.email);\r\n\r\n  }\r\n  unenroll(sectionid) {\r\n    this.sectionService.unenrollStudentInSection(sectionid)\r\n      .then(() => {this.sectionService\r\n        .findSectionsForStudent()\r\n        .then(sections => this.sections = sections );\r\n      });\r\n  }\r\n  ngOnInit() {\r\n    this.service\r\n      .profile()\r\n      .then(user => {\r\n        if (user !== null) {\r\n          this._id = user._id;\r\n          this.username = user.username;\r\n          this.firstName = user.firstName;\r\n          this.lastName = user.lastName;\r\n          this.email = user.email;\r\n          console.log(user._id);\r\n        } else {\r\n          this._id = -1;\r\n        }\r\n\r\n      });\r\n\r\n    if (this._id !== -1) {\r\n      this.sectionService\r\n        .findSectionsForStudent()\r\n        .then(sections => this.sections = sections );\r\n\r\n      this.courseService.findAllCourses()\r\n        .then(courses => this.courses = courses);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n  <div class=\\\"float-left\\\">\\n    <a routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n  <div class=\\\"float-right\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  user;\n  register(username, password, password2) {\n    if (password !== password2) {\n      alert('Passwords do not match');\n    } else {\n\n      this.service.findUserByUsername(username).then((user) => {\n        if (user._id === -1) {\n          this.service\n            .createUser(username, password)\n            .then(() =>\n              this.router.navigate(['profile']));\n        } else {\n          alert('Username already present');\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <br>\\n  <br>\\n  <h1>Sections for course: {{courseId}}</h1>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} {{section.seats}} {{section.maxSeats}}\\n      <button *ngIf=\\\"section.seats>0\\\" (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']))\n  }\n\n  sectionName = '';\n  seats = '';\n  maxSeats = '';\n  courseId = '';\n  sections = [];\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n  enroll(section) {\n    // alert(section._id);\n    this.service\n      .enrollStudentInSection(section._id)\n      .then(() => {\n        this.router.navigate(['profile']);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class CourseNavigatorServiceClient {\r\n  COURSE_URL = 'http://localhost:8080/api/course';\r\n  COURSE_URL_HEROKU = 'https://disha-sule-webdev-summer1-2018.herokuapp.com/api/course';\r\n  findAllCourses() {\r\n    return fetch\r\n    (this.COURSE_URL_HEROKU)\r\n      .then(response => response.json());\r\n  }\r\n  findModulesForCourse(courseId) {\r\n    return fetch\r\n    (this.COURSE_URL_HEROKU + '/'\r\n      + courseId + '/module')\r\n      .then(response => response.json());\r\n  }\r\n\r\n\r\n}\r\n","export class CourseServiceClient {\r\n  COURSE_URL = 'http://localhost:8080/api/course';\r\n  COURSE_URL_HEROKU = 'https://disha-sule-webdev-summer1-2018.herokuapp.com/api/course';\r\n\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL_HEROKU)\r\n      .then(response => response.json());\r\n  }\r\n  findCourseById(courseId) {\r\n    return fetch(this.COURSE_URL_HEROKU + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class LessonServiceClient {\r\n  COURSE_URL = 'http://localhost:8080/api/course';\r\n  COURSE_URL_HEROKU = 'https://disha-sule-webdev-summer1-2018.herokuapp.com/api/course';\r\n  findLessonsForModule(courseId, moduleId) {\r\n    return fetch(this.COURSE_URL_HEROKU + '/' + courseId + '/module/' + moduleId + '/lesson')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient {\r\n  MODULE_URL = 'http://localhost:8080/api/course/COURSE_ID/module';\r\n  MODULE_URL_HEROKU = 'https://disha-sule-webdev-summer1-2018.herokuapp.com/api/course/COURSE_ID/module';\r\n  findModulesForCourse(courseId) {\r\n    return fetch(this.MODULE_URL_HEROKU.replace('COURSE_ID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class SectionServiceClient {\r\n\r\n  SECTION_URL = 'http://localhost:4000/api/course/COURSEID/section';\r\n  STUDENT_URL = 'http://localhost:4000/api/student/section';\r\n  SECTION_URL2 = 'http://localhost:4000/api/section';\r\n\r\n  // https://sule-disha-nodejs-server.herokuapp.com/\r\n\r\n  SECTION_URL_HEROKU = 'https://sule-disha-nodejs-server.herokuapp.com/api/course/COURSEID/section';\r\n  STUDENT_URL_HEROKU = 'https://sule-disha-nodejs-server.herokuapp.com/api/student/section';\r\n  SECTION_URL2_HEROKU = 'https://sule-disha-nodejs-server.herokuapp.com/api/section';\r\n\r\n\r\n\r\n  findSectionsForStudent() {\r\n    // const url = 'http://localhost:4000/api/student/section';\r\n    return fetch(this.STUDENT_URL_HEROKU, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  enrollStudentInSection(sectionId) {\r\n    // const url = 'http://localhost:4000/api/student/section';\r\n    const url = this.SECTION_URL2_HEROKU + '/' + sectionId + '/enrollment';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n  unenrollStudentInSection(sectionId){\r\n    const url = this.SECTION_URL2_HEROKU + '/' + sectionId + '/unenrollment';\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  findSectionsForCourse(courseId) {\r\n    return fetch(this.SECTION_URL_HEROKU.replace('COURSEID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createSection(courseId, name, seats, maxSeats) {\r\n    const section = {courseId, name, seats, maxSeats};\r\n    return fetch(this.SECTION_URL_HEROKU.replace('COURSEID', courseId), {\r\n      method: 'post',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  deleteSection(sectionId) {\r\n    const url = this.SECTION_URL2_HEROKU + '/' + sectionId;\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n  saveSection(sectionId, name, seats, maxSeats) {\r\n    const url = this.SECTION_URL2_HEROKU + '/' + sectionId;\r\n    const section = {sectionId, name, seats, maxSeats};\r\n    return fetch(url, {\r\n      method: 'put',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  URL = 'http://localhost:4000';\r\n  URL_HEROKU = 'https://sule-disha-nodejs-server.herokuapp.com';\r\n\r\n  findUserById(userId) {\r\n    return fetch(this.URL_HEROKU + '/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findUserByUsername(username) {\r\n    const credentials = {\r\n      username: username\r\n    };\r\n    return fetch(this.URL_HEROKU + '/api/register', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }) .then(response => response.json());\r\n  }\r\n\r\n  profile() {\r\n    return fetch(this.URL_HEROKU + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n  login(username, password) {\r\n    const credentials = {\r\n      username : username,\r\n      password: password\r\n    };\r\n    return fetch(this.URL_HEROKU + '/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n    }\r\n  logout() {\r\n    return fetch(this.URL_HEROKU + '/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include', // include, same-origin, *omit\r\n    });\r\n  }\r\n\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch(this.URL_HEROKU + '/api/user', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  update(_id, username, firstName, lastName, email) {\r\n    const url = this.URL_HEROKU + '/api/profile';\r\n    const user = {_id, username, firstName, lastName, email};\r\n    return fetch(url, {\r\n      method: 'put',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n  LESSON_URL = 'http://localhost:8080/api/lesson';\r\n  LESSON_URL_HEROKU = 'https://disha-sule-webdev-summer1-2018.herokuapp.com/api/lesson';\r\n\r\n  findWidgetsForLesson(lessonId) {\r\n    return fetch(this.LESSON_URL_HEROKU + '/' + lessonId + '/widgets')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div>\\n  <div *ngFor=\\\"let course of courses\\\">\\n    <ul class=\\\"list-group\\\">\\n      <div *ngFor=\\\"let enrollment of sections\\\">\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"course.id===enrollment.section.courseId\\\">\\n          Enrolled:  <a routerLink='/course/{{course.id}}'>Course : {{course.title}} </a>\\n        </li>\\n      </div>\\n    </ul>\\n  </div>\\n</div>\\n<h1>\\n    White Board\\n  </h1>\\n\\n  <a routerLink=\\\"/login\\\">Login</a> &nbsp; &nbsp;<a routerLink=\\\"/register\\\">Register</a>&nbsp; &nbsp;<a routerLink=\\\"/profile\\\">Profile</a>\\n\\n  <app-course-grid></app-course-grid>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport {Router} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router) { }\n\n  user = {};\n  _id;\n  sections = [];\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n        }\n\n      });\n\n    if (this._id !== -1) {\n      this.sectionService\n        .findSectionsForStudent()\n        .then(sections => this.sections = sections );\n\n      this.courseService.findAllCourses()\n        .then(courses => this.courses = courses);\n    }\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>Widgets</h1>\\n<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'List'\\\">\\n      <h1>ListWidget</h1>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let item of widget.listItem.split('\\\\n')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n      <p>{{widget.text}}</p>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\n      <img src=\\\"{{widget.src}}\\\">\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.lessonId);\n  }\n  loadWidgets(lessonId) {\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}